package Views;

import Controller.AfiliadoData;
import Controller.EspecialidadData;
import Controller.OrdenData;
import Controller.PrestadorData;
import Model.Afiliado;
import Model.Especialidad;
import Model.FormaDePagoEnum;
import Model.Orden;
import Model.Prestador;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andres
 */
public class OrdenView extends javax.swing.JPanel {

    DefaultTableModel modeloTablaAfiliado = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            // Hacer la columna 1 editable y lo demás no...
            return false;
        }
    };

    DefaultTableModel modeloTablaPrestadores = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            // Hacer la columna 1 editable y lo demás no...
            return false;
        }
    };

    AfiliadoData afiData = new AfiliadoData();
    EspecialidadData espeData = new EspecialidadData();
    OrdenData ordenData = new OrdenData();
    PrestadorData prestaData = new PrestadorData();

    public OrdenView() {
        initComponents();
        cabeceraTablaAfiliado();
        cargarTablaAfiliado();
        cabeceraTablaPrestadores();
        cargarTablaPrestadores();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tfBusquedaAfiliado = new javax.swing.JTextField();
        tfBuscarPrestador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAfiliado = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPrestadores = new javax.swing.JTable();
        dcFechaOrden = new com.toedter.calendar.JDateChooser();
        cbFormaPago = new javax.swing.JComboBox<>();
        tfIdOrdenes = new javax.swing.JTextField();
        tfImporteOrden = new javax.swing.JTextField();
        rbEstadoOrden = new javax.swing.JRadioButton();
        btGuardar = new javax.swing.JButton();
        btNuevo = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfIdAfiliado = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfIdPrestador = new javax.swing.JTextField();
        tfBusquedaOrden = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Emisión de Órdenes");

        tfBusquedaAfiliado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBusquedaAfiliadoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBusquedaAfiliadoKeyTyped(evt);
            }
        });

        tfBuscarPrestador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBuscarPrestadorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBuscarPrestadorKeyTyped(evt);
            }
        });

        tbAfiliado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbAfiliado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAfiliadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbAfiliado);

        tbPrestadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbPrestadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPrestadoresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbPrestadores);

        rbEstadoOrden.setText("Estado");

        btGuardar.setText("Guardar");

        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        btEliminar.setText("Eliminar");

        jLabel2.setText("ID Orden");

        jLabel3.setText("Importe");

        jLabel4.setText("Forma de Pago");

        jLabel5.setText("Fecha");

        jLabel6.setText("Id Afiliado");

        jLabel7.setText("Id Prestador");

        tfBusquedaOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBusquedaOrdenKeyReleased(evt);
            }
        });

        jLabel8.setText("Buscar Órden por ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(tfBusquedaAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210)
                .addComponent(tfBuscarPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel2)
                .addGap(22, 22, 22)
                .addComponent(tfIdOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel6)
                .addGap(15, 15, 15)
                .addComponent(tfIdAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jLabel8)
                .addGap(9, 9, 9)
                .addComponent(tfBusquedaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(jLabel7)
                .addGap(15, 15, 15)
                .addComponent(tfIdPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel5)
                .addGap(11, 11, 11)
                .addComponent(dcFechaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210)
                .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(cbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210)
                .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(tfImporteOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(360, 360, 360)
                .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(rbEstadoOrden))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfBusquedaAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBuscarPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfIdOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfIdAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBusquedaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(tfIdPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(dcFechaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4))
                    .addComponent(cbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfImporteOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(4, 4, 4)
                .addComponent(rbEstadoOrden))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfBusquedaAfiliadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaAfiliadoKeyReleased
        cleanTableAfiliado();
        String busquedaSrt = tfBusquedaAfiliado.getText();
        Afiliado afiliado = new Afiliado();
        if (!busquedaSrt.isEmpty()) {
            afiliado = afiData.obtenerAfiliadoPorDni(busquedaSrt);
            if (afiliado != null) {
                modeloTablaAfiliado.addRow(new Object[]{afiliado.getIdAfiliado(), afiliado.getApellidoAfiliado(), afiliado.getNombreAfiliado()});
            }
        } else {
            cargarTablaAfiliado();
        }
    }//GEN-LAST:event_tfBusquedaAfiliadoKeyReleased

    private void tfBusquedaAfiliadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaAfiliadoKeyTyped
        Service.Validar.esNumero(evt);
    }//GEN-LAST:event_tfBusquedaAfiliadoKeyTyped

    private void tfBuscarPrestadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarPrestadorKeyTyped
        Service.Validar.esNumero(evt);
    }//GEN-LAST:event_tfBuscarPrestadorKeyTyped

    private void tfBuscarPrestadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarPrestadorKeyReleased
        //buscar prestadores
        cleanTablePrestadores();
        String busquedaSrt = tfBuscarPrestador.getText();
        if (!busquedaSrt.isEmpty()) {
            int matriculaBuscada = Integer.parseInt(busquedaSrt);
            Prestador prestador = prestaData.obtenerPrestadorPorMatricula(matriculaBuscada);
            if (prestador != null) {
                modeloTablaPrestadores.addRow(new Object[]{prestador.getIdPrestador(), prestador.getApellidoPrestador(), prestador.getNombrePrestador()});
            } else {
                //JOptionPane.showMessageDialog(null, "No se encontró esa matrícula.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar una matrícula.");
        }
    }//GEN-LAST:event_tfBuscarPrestadorKeyReleased

    private void tbAfiliadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAfiliadoMouseClicked
        int rowSelect = tbAfiliado.getSelectedRow();
        if (rowSelect != -1) {
            int idAfiliado = (int) tbAfiliado.getValueAt(rowSelect, 0);
            Afiliado afi = afiData.obtenerAfiliadoPorId(idAfiliado);
            if (afi != null) {
                tfIdAfiliado.setText(String.valueOf(afi.getIdAfiliado()));
            }
        }
    }//GEN-LAST:event_tbAfiliadoMouseClicked

    private void tbPrestadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPrestadoresMouseClicked
        int rowSelect = tbPrestadores.getSelectedRow();
        if (rowSelect != -1) {
            int idPrestador = (int) tbPrestadores.getValueAt(rowSelect, 0);
            Prestador prestador = prestaData.obtenerPrestadorPorId(idPrestador);
            if (prestador != null) {
                tfIdPrestador.setText(String.valueOf(prestador.getIdPrestador()));
            }
        }
    }//GEN-LAST:event_tbPrestadoresMouseClicked

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        cleanGeneral();
    }//GEN-LAST:event_btNuevoActionPerformed

    private void tfBusquedaOrdenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaOrdenKeyReleased
//buscar órden
        cleanGeneral();
        String buscarOrdenSrt = tfBusquedaOrden.getText();
        if (!buscarOrdenSrt.isEmpty()) {
            int idOrdenBuscada = Integer.parseInt(buscarOrdenSrt);
            Orden orden = ordenData.buscarOrdenPorID(idOrdenBuscada);
            if (orden != null) {
                tfIdOrdenes.setText(String.valueOf(orden.getIdOrden()));
                tfIdAfiliado.setText(String.valueOf(orden.getAfiliado().getIdAfiliado()));
                tfIdPrestador.setText(String.valueOf(orden.getPrestador().getIdPrestador()));
                dcFechaOrden.setDate(java.sql.Date.valueOf(orden.getFecha()));
                cbFormaPago.setSelectedItem(orden.getFormaDePago().toString());
                tfImporteOrden.setText(String.valueOf(orden.getImporte()));
                rbEstadoOrden.setSelected(orden.isEstado());

            }
        }
    }//GEN-LAST:event_tfBusquedaOrdenKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btNuevo;
    private javax.swing.JComboBox<String> cbFormaPago;
    private com.toedter.calendar.JDateChooser dcFechaOrden;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton rbEstadoOrden;
    private javax.swing.JTable tbAfiliado;
    private javax.swing.JTable tbPrestadores;
    private javax.swing.JTextField tfBuscarPrestador;
    private javax.swing.JTextField tfBusquedaAfiliado;
    private javax.swing.JTextField tfBusquedaOrden;
    private javax.swing.JTextField tfIdAfiliado;
    private javax.swing.JTextField tfIdOrdenes;
    private javax.swing.JTextField tfIdPrestador;
    private javax.swing.JTextField tfImporteOrden;
    // End of variables declaration//GEN-END:variables

    private void cabeceraTablaAfiliado() {
        modeloTablaAfiliado.addColumn("idAfiliado");
        modeloTablaAfiliado.addColumn("Apellido");
        modeloTablaAfiliado.addColumn("Nombre");
        tbAfiliado.setModel(modeloTablaAfiliado);
    }

    private void cabeceraTablaPrestadores() {
        modeloTablaPrestadores.addColumn("ID");
        modeloTablaPrestadores.addColumn("Apellido");
        modeloTablaPrestadores.addColumn("Nombre");
        tbPrestadores.setModel(modeloTablaPrestadores);
    }

    private void cargarTablaAfiliado() {
        List<Afiliado> listaAfiliado = afiData.listarAfiliados();
        for (Afiliado afiliado : listaAfiliado) {
            modeloTablaAfiliado.addRow(new Object[]{afiliado.getIdAfiliado(), afiliado.getApellidoAfiliado(), afiliado.getNombreAfiliado()});
        }
    }

    private void cargarTablaPrestadores() {
        List<Prestador> listaPrestadores = prestaData.listarPrestadores();
        for (Prestador presta : listaPrestadores) {
            modeloTablaPrestadores.addRow(new Object[]{presta.getIdPrestador(), presta.getApellidoPrestador(), presta.getNombrePrestador()});
        }
    }

    private void cargarCombo() {
        FormaDePagoEnum[] formasDePago = FormaDePagoEnum.values();
        String[] formasDePagoStrings = new String[formasDePago.length];
        for (int i = 0; i < formasDePago.length; i++) {
            formasDePagoStrings[i] = formasDePago[i].toString();
        }
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(formasDePagoStrings);
        cbFormaPago.setModel(comboBoxModel);
    }

    private void cleanTableAfiliado() {
        modeloTablaAfiliado.setRowCount(0);
    }

    private void cleanTablePrestadores() {
        modeloTablaPrestadores.setRowCount(0);
    }

    private void cleanGeneral() {
        //tfBusquedaOrden.setText("");
        tfBusquedaAfiliado.setText("");
        tfBuscarPrestador.setText("");
        tfIdOrdenes.setText("");
        tfIdAfiliado.setText("");
        tfIdPrestador.setText("");
        //dcFechaOrden.setDate(null);
        dcFechaOrden.setDate(new Date());
        cbFormaPago.setSelectedIndex(-1);
        tfImporteOrden.setText("");
        rbEstadoOrden.setSelected(false);
        cargarTablaAfiliado();
        cargarTablaPrestadores();
    }

}
