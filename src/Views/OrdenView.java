package Views;

import Controller.AfiliadoData;
import Controller.EspecialidadData;
import Controller.OrdenData;
import Controller.PrestadorData;
import Model.Afiliado;
import Model.Especialidad;
import Model.FormaDePagoEnum;
import Model.Orden;
import Model.Prestador;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import Service.CustomJTable;

/**
 *
 * @author andres
 */
public class OrdenView extends javax.swing.JPanel {

    DefaultTableModel modeloTablaAfiliado = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    DefaultTableModel modeloTablaPrestadores = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    private AfiliadoData afiData = new AfiliadoData();
    private EspecialidadData espeData = new EspecialidadData();
    private OrdenData ordenData = new OrdenData();
    private PrestadorData prestaData = new PrestadorData();
    private boolean cambiosEnOrden = false;//Flag para verificar cambios en atributos de Órden cargada.

    public OrdenView() {
        initComponents();
        cabeceraTablaAfiliado();
        cargarTablaAfiliado();
        cabeceraTablaPrestadores();
        cargarTablaPrestadores();
        cargarCombo();
        tfBusquedaOrden.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tfBusquedaAfiliado = new javax.swing.JTextField();
        tfBuscarPrestador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAfiliado = new CustomJTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPrestadores = new CustomJTable();
        dcFechaOrden = new com.toedter.calendar.JDateChooser();
        cbFormaPago = new javax.swing.JComboBox<>();
        tfIdOrdenes = new javax.swing.JTextField();
        tfImporteOrden = new javax.swing.JTextField();
        rbEstadoOrden = new javax.swing.JRadioButton();
        btGuardar = new javax.swing.JButton();
        btNuevo = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfIdAfiliado = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfIdPrestador = new javax.swing.JTextField();
        tfBusquedaOrden = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(817, 663));

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Emisión de Órdenes");

        tfBusquedaAfiliado.setToolTipText("");
        tfBusquedaAfiliado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfBusquedaAfiliadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfBusquedaAfiliadoFocusLost(evt);
            }
        });
        tfBusquedaAfiliado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBusquedaAfiliadoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBusquedaAfiliadoKeyTyped(evt);
            }
        });

        tfBuscarPrestador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBuscarPrestadorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBuscarPrestadorKeyTyped(evt);
            }
        });

        tbAfiliado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbAfiliado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAfiliadoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbAfiliadoMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbAfiliado);

        tbPrestadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbPrestadores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbPrestadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPrestadoresMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbPrestadoresMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbPrestadores);

        dcFechaOrden.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcFechaOrdenPropertyChange(evt);
            }
        });

        cbFormaPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFormaPagoItemStateChanged(evt);
            }
        });
        cbFormaPago.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbFormaPagoPropertyChange(evt);
            }
        });
        cbFormaPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbFormaPagoKeyTyped(evt);
            }
        });

        tfIdOrdenes.setEditable(false);

        tfImporteOrden.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tfImporteOrdenPropertyChange(evt);
            }
        });
        tfImporteOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfImporteOrdenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfImporteOrdenKeyTyped(evt);
            }
        });

        rbEstadoOrden.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        rbEstadoOrden.setText("Estado");
        rbEstadoOrden.setEnabled(false);

        btGuardar.setFont(new java.awt.Font("Cantarell", 0, 17)); // NOI18N
        btGuardar.setText("Guardar");
        btGuardar.setEnabled(false);
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btNuevo.setFont(new java.awt.Font("Cantarell", 0, 17)); // NOI18N
        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        btEliminar.setFont(new java.awt.Font("Cantarell", 0, 17)); // NOI18N
        btEliminar.setText("Eliminar");
        btEliminar.setEnabled(false);
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel2.setText("ID Orden");

        jLabel3.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel3.setText("Importe $");

        jLabel4.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel4.setText("Forma de Pago");

        jLabel5.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel5.setText("Fecha");

        jLabel6.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel6.setText("ID Afiliado");

        tfIdAfiliado.setEditable(false);
        tfIdAfiliado.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tfIdAfiliadoPropertyChange(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel7.setText("ID Prestador");

        tfIdPrestador.setEditable(false);

        tfBusquedaOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfBusquedaOrdenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBusquedaOrdenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBusquedaOrdenKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel8.setText("Buscar Órden por ID");

        jLabel9.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Busqueda Afiliado por DNI:");

        jLabel10.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Buscar Prestador por Especialidad:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(jSeparator1)
                .addGap(238, 238, 238))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(376, 376, 376))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(8, 8, 8)
                                .addComponent(tfImporteOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(rbEstadoOrden, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                .addGap(73, 73, 73))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(16, 16, 16)
                                        .addComponent(dcFechaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(86, 86, 86)
                                .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(100, 100, 100)
                                .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(60, 60, 60)
                                .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)
                        .addComponent(tfIdOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfIdAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfIdPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(28, 28, 28)
                        .addComponent(tfBusquedaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(31, 31, 31)
                                .addComponent(tfBusquedaAfiliado)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(tfBuscarPrestador))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBusquedaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tfBuscarPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfBusquedaAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfIdOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(tfIdAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIdPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dcFechaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(cbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfImporteOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(rbEstadoOrden)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel4)))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfBusquedaAfiliadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaAfiliadoKeyReleased
        cleanTableAfiliado();
        String busquedaSrt = tfBusquedaAfiliado.getText();
        Afiliado afiliado = new Afiliado();
        if (!busquedaSrt.isEmpty()) {
            afiliado = afiData.obtenerAfiliadoPorDni(busquedaSrt);
            if (afiliado != null) {
                modeloTablaAfiliado.addRow(new Object[]{afiliado.getIdAfiliado(), afiliado.getApellidoAfiliado(), afiliado.getNombreAfiliado()});
            }
        } else {
            cargarTablaAfiliado();
        }
    }//GEN-LAST:event_tfBusquedaAfiliadoKeyReleased

    private void tfBusquedaAfiliadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaAfiliadoKeyTyped
        Service.Validar.esNumero(evt);
    }//GEN-LAST:event_tfBusquedaAfiliadoKeyTyped

    private void tfBuscarPrestadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarPrestadorKeyTyped
        Service.Validar.esLetra(evt);
    }//GEN-LAST:event_tfBuscarPrestadorKeyTyped

    private void tfBuscarPrestadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarPrestadorKeyReleased
        //buscar prestadores por el nombre de la especialidad...
        cleanTablePrestadores();
        String prestadorBuscado = tfBuscarPrestador.getText();
        if (!prestadorBuscado.isEmpty()) {
            List<Prestador> listaPrestadores = prestaData.buscarPrestadoresPorNombreEspecialidad(prestadorBuscado);
            if (listaPrestadores != null) {
                for (Prestador presta : listaPrestadores) {
                    if (presta.getEspecialidad() != null) {
                        modeloTablaPrestadores.addRow(new Object[]{presta.getIdPrestador(), presta.getApellidoPrestador(), presta.getNombrePrestador(), presta.getEspecialidad().getNombreEspecialidad()});
                    }
                }
            }
        }
    }//GEN-LAST:event_tfBuscarPrestadorKeyReleased

    private void tbAfiliadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAfiliadoMouseClicked
        int rowSelect = tbAfiliado.getSelectedRow();
        if (rowSelect != -1) {
            int idAfiliado = (int) tbAfiliado.getValueAt(rowSelect, 0);
            Afiliado afi = afiData.obtenerAfiliadoPorId(idAfiliado);
            if (afi != null) {
                tfIdAfiliado.setText(String.valueOf(afi.getIdAfiliado()));
            }
        }
    }//GEN-LAST:event_tbAfiliadoMouseClicked

    private void tbPrestadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPrestadoresMouseClicked
        int rowSelect = tbPrestadores.getSelectedRow();
        if (rowSelect != -1) {
            int idPrestador = (int) tbPrestadores.getValueAt(rowSelect, 0);
            Prestador prestador = prestaData.obtenerPrestadorPorId(idPrestador);
            if (prestador != null) {
                tfIdPrestador.setText(String.valueOf(prestador.getIdPrestador()));
            }
        }
    }//GEN-LAST:event_tbPrestadoresMouseClicked

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        cleanGeneral();
        tfBusquedaOrden.setText("");
        activarBotonGuardar();
        cambiosEnOrden = false;
    }//GEN-LAST:event_btNuevoActionPerformed

    private void tfBusquedaOrdenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaOrdenKeyReleased
        //buscar órden
        cambiosEnOrden = false;
        cleanGeneral();
        String buscarOrdenSrt = tfBusquedaOrden.getText();
        if (!buscarOrdenSrt.isEmpty()) {
            int idOrdenBuscada = Integer.parseInt(buscarOrdenSrt);
            Orden orden = ordenData.buscarOrdenPorID(idOrdenBuscada);
            if (orden != null) {
                tfIdOrdenes.setText(String.valueOf(orden.getIdOrden()));
                tfIdAfiliado.setText(String.valueOf(orden.getAfiliado().getIdAfiliado()));
                tfIdPrestador.setText(String.valueOf(orden.getPrestador().getIdPrestador()));
                dcFechaOrden.setDate(java.sql.Date.valueOf(orden.getFecha()));
                cbFormaPago.setSelectedItem(orden.getFormaDePago());
                tfImporteOrden.setText(String.valueOf(orden.getImporte()));
                rbEstadoOrden.setSelected(orden.isEstado());
                activarBotonEliminar();
                cambiosEnOrden = true;
            } else {
                desactivarBotonEliminar();
                desactivarBotonGuardar();
            }
        } else {
            desactivarBotonEliminar();
            desactivarBotonGuardar();
        }
    }//GEN-LAST:event_tfBusquedaOrdenKeyReleased

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        String IdOrdenSrt = tfIdOrdenes.getText();
        if (!IdOrdenSrt.isEmpty()) {
            int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar esta órden?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                int idOrden = Integer.parseInt(IdOrdenSrt);
                ordenData.eliminarOrden(idOrden);
                cleanGeneral();
                tfBusquedaOrden.setText("");
                desactivarBotonEliminar();
                cambiosEnOrden = false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una órden.");
            desactivarBotonEliminar();
        }
    }//GEN-LAST:event_btEliminarActionPerformed

    private void tfBusquedaOrdenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaOrdenKeyTyped
        Service.Validar.esNumero(evt);
    }//GEN-LAST:event_tfBusquedaOrdenKeyTyped

    private void cbFormaPagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbFormaPagoKeyTyped
    }//GEN-LAST:event_cbFormaPagoKeyTyped

    private void tfImporteOrdenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfImporteOrdenKeyTyped
        Service.Validar.esNumero(evt);
    }//GEN-LAST:event_tfImporteOrdenKeyTyped

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        String idOrdenSrt = tfIdOrdenes.getText();
        if (!cambiosEnOrden) {//Si no hubo cambios en los atributos de la Órden se intenta Guardar 
            if (idOrdenSrt.isEmpty()) {
                String idAfiliadoSrt = tfIdAfiliado.getText();
                String idPrestadorSrt = tfIdPrestador.getText();
                Date fecha = dcFechaOrden.getDate();
                FormaDePagoEnum formaPago = (FormaDePagoEnum) cbFormaPago.getSelectedItem();
                String importeSrt = tfImporteOrden.getText();
                boolean estado = true;
                // Verificar si algún campo está vacío
                if (idAfiliadoSrt.isEmpty() || idPrestadorSrt.isEmpty() || fecha == null || formaPago == null || importeSrt.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Debes completar todos los campos.");
                } else {
                    int idAfiliado = Integer.parseInt(idAfiliadoSrt);
                    int idPrestador = Integer.parseInt(idPrestadorSrt);

                    // Obtener objetos Afiliado y Prestador a partir de sus IDs (reemplaza estos métodos con los adecuados)
                    Afiliado afiliado = afiData.obtenerAfiliadoPorId(idAfiliado);
                    Prestador prestador = prestaData.obtenerPrestadorPorId(idPrestador);

                    double importe = Double.parseDouble(importeSrt);
                    LocalDate fechaLocalDate = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    Orden orden = new Orden(fechaLocalDate, formaPago, importe, estado, afiliado, prestador);

                    ordenData.guardarOrden(orden);
                    desactivarBotonGuardar();
                    cleanGeneral();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Presione \"Nuevo\" para agregar una orden");
                desactivarBotonGuardar();
            }
        } else {//Si hay cambios se intenta Actualizar
            int idOrden = Integer.parseInt(tfIdOrdenes.getText());
            int IdAfiliado = Integer.parseInt(tfIdAfiliado.getText());
            int idPrestador = Integer.parseInt(tfIdPrestador.getText());
            // Obtener objetos Afiliado y Prestador a partir de ID
            Afiliado afiliado = afiData.obtenerAfiliadoPorId(IdAfiliado);
            Prestador prestador = prestaData.obtenerPrestadorPorId(idPrestador);
            //
            double importe = Double.parseDouble(tfImporteOrden.getText());
            //
            Date fecha = dcFechaOrden.getDate();
            LocalDate fechaLocalDate = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            FormaDePagoEnum formaPago = (FormaDePagoEnum) cbFormaPago.getSelectedItem();

            Orden orden = new Orden(idOrden, fechaLocalDate, formaPago, importe, true, afiliado, prestador);
            ordenData.actualizarOrden(orden);
            cambiosEnOrden = false;
            cleanGeneral();
            desactivarBotonGuardar();
            desactivarBotonEliminar();
            tfBusquedaOrden.setText("");
        }
    }//GEN-LAST:event_btGuardarActionPerformed

    private void tfIdAfiliadoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tfIdAfiliadoPropertyChange
    }//GEN-LAST:event_tfIdAfiliadoPropertyChange

    private void tbAfiliadoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAfiliadoMousePressed
        if (cambiosEnOrden) {
            activarBotonGuardar();
        }
    }//GEN-LAST:event_tbAfiliadoMousePressed

    private void tbPrestadoresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPrestadoresMousePressed
        if (cambiosEnOrden) {
            activarBotonGuardar();
        }
    }//GEN-LAST:event_tbPrestadoresMousePressed

    private void dcFechaOrdenPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcFechaOrdenPropertyChange
        if (cambiosEnOrden) {
            activarBotonGuardar();
        }
    }//GEN-LAST:event_dcFechaOrdenPropertyChange

    private void cbFormaPagoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbFormaPagoPropertyChange
    }//GEN-LAST:event_cbFormaPagoPropertyChange

    private void cbFormaPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFormaPagoItemStateChanged
        if (cambiosEnOrden) {
            activarBotonGuardar();
        }
    }//GEN-LAST:event_cbFormaPagoItemStateChanged

    private void tfImporteOrdenPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tfImporteOrdenPropertyChange
    }//GEN-LAST:event_tfImporteOrdenPropertyChange

    private void tfImporteOrdenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfImporteOrdenKeyReleased
        if (cambiosEnOrden) {
            activarBotonGuardar();
        }
    }//GEN-LAST:event_tfImporteOrdenKeyReleased

    private void tfBusquedaAfiliadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfBusquedaAfiliadoFocusGained
    }//GEN-LAST:event_tfBusquedaAfiliadoFocusGained

    private void tfBusquedaAfiliadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfBusquedaAfiliadoFocusLost
    }//GEN-LAST:event_tfBusquedaAfiliadoFocusLost

    private void tfBusquedaOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaOrdenKeyPressed
    }//GEN-LAST:event_tfBusquedaOrdenKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btNuevo;
    private javax.swing.JComboBox<FormaDePagoEnum> cbFormaPago;
    private com.toedter.calendar.JDateChooser dcFechaOrden;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton rbEstadoOrden;
    private javax.swing.JTable tbAfiliado;
    private javax.swing.JTable tbPrestadores;
    private javax.swing.JTextField tfBuscarPrestador;
    private javax.swing.JTextField tfBusquedaAfiliado;
    private javax.swing.JTextField tfBusquedaOrden;
    private javax.swing.JTextField tfIdAfiliado;
    private javax.swing.JTextField tfIdOrdenes;
    private javax.swing.JTextField tfIdPrestador;
    private javax.swing.JTextField tfImporteOrden;
    // End of variables declaration//GEN-END:variables

    private void cabeceraTablaAfiliado() {
        modeloTablaAfiliado.addColumn("idAfiliado");
        modeloTablaAfiliado.addColumn("Apellido");
        modeloTablaAfiliado.addColumn("Nombre");
        tbAfiliado.setModel(modeloTablaAfiliado);
    }

    private void cabeceraTablaPrestadores() {
        modeloTablaPrestadores.addColumn("ID");
        modeloTablaPrestadores.addColumn("Apellido");
        modeloTablaPrestadores.addColumn("Nombre");
        modeloTablaPrestadores.addColumn("Especialidad");
        tbPrestadores.setModel(modeloTablaPrestadores);

        // Establecer el ancho preferido de columna ID (columna 0)
        TableColumnModel columnModel = tbPrestadores.getColumnModel();
        TableColumn idColumn = columnModel.getColumn(0);
        idColumn.setPreferredWidth(20);
    }

    private void cargarTablaAfiliado() {
        cleanTableAfiliado();
        List<Afiliado> listaAfiliado = afiData.listarAfiliados();
        Collections.sort(listaAfiliado);
        tbAfiliado.clearSelection();
        for (Afiliado afiliado : listaAfiliado) {
            modeloTablaAfiliado.addRow(new Object[]{afiliado.getIdAfiliado(), afiliado.getApellidoAfiliado(), afiliado.getNombreAfiliado()});
        }
    }

    private void cargarTablaPrestadores() {
        cleanTablePrestadores();
        List<Prestador> listaPrestadores = prestaData.listarPrestadores();
        tbPrestadores.setAutoResizeMode(2);
        tbPrestadores.clearSelection();
        Collections.sort(listaPrestadores);
        if (listaPrestadores != null) {
            for (Prestador presta : listaPrestadores) {
                if (presta != null && presta.getEspecialidad() != null) {
                    modeloTablaPrestadores.addRow(new Object[]{presta.getIdPrestador(), presta.getApellidoPrestador(), presta.getNombrePrestador(), presta.getEspecialidad().getNombreEspecialidad()});
                }
            }
        }
    }

    private void cargarCombo() {
        FormaDePagoEnum[] formasDePago = FormaDePagoEnum.values();
        DefaultComboBoxModel<FormaDePagoEnum> comboBoxModel = new DefaultComboBoxModel<>(formasDePago);
        cbFormaPago.setModel(comboBoxModel);
    }

    private void cleanTableAfiliado() {
        modeloTablaAfiliado.setRowCount(0);
    }

    private void cleanTablePrestadores() {
        modeloTablaPrestadores.setRowCount(0);
    }

    private void cleanGeneral() {
        //tfBusquedaOrden.setText("");
        tfBusquedaAfiliado.setText("");
        tfBuscarPrestador.setText("");
        tfIdOrdenes.setText("");
        tfIdAfiliado.setText("");
        tfIdPrestador.setText("");
        //dcFechaOrden.setDate(null);
        dcFechaOrden.setDate(new Date());
        cbFormaPago.setSelectedIndex(-1);
        tfImporteOrden.setText("");
        rbEstadoOrden.setSelected(false);
        cargarTablaAfiliado();
        cargarTablaPrestadores();
    }

    private void activarBotonEliminar() {
        btEliminar.setEnabled(true);
    }

    private void desactivarBotonEliminar() {
        btEliminar.setEnabled(false);
    }

    private void activarBotonGuardar() {
        btGuardar.setEnabled(true);
    }

    private void desactivarBotonGuardar() {
        btGuardar.setEnabled(false);
    }

    public void setFocusTfBusquedaOrden() {
        tfBusquedaOrden.requestFocus();
    }
}
